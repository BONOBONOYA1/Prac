강의 내용

패키지부터 만든다.

먼저 데이터를 받고 데이터베이스와 연결하는 부분인 entity를 먼저 구현한다.
 Memo 자바클래스 생성  > Timestamped 자바 클래스 생성 > Memorepository 인터페이스클래스 생성

인강 4:53초 데이터베이스와 연결을 하고 테이플 역할을 하는 entity 부분까지 초기설정이 완료됐다.

-----------------------------------------------------------------------------------------------------------여기까지 밑작업
본 작업 시작
메인페이지 = 우리가 메모장 사이트를 보는 메인페이지를 먼저 반환하는 기능부터 추가를 해야 됩니다. 저 요청을 받기위한
	      controller부터 만들도록 하겠다. >>controller패키지에서 Memocontroller자바클래스 생성

인강 11:13분 index파일 writePost에서 Post 방식 url api/memos를 이 부분을 받는 서버부분을 controller자바클래스에서 개발시작

인강 12:24분 public Memo createMemo(@RequestBody MemoRequestDto requestDto) { >>Dto 개발을 위해 Dto패키지로 넘어감

인강 13:11초 실제로 데이터를 뭔가 로직을 작성하고 테이터베이스와 연결하는 부분이 service부분인데 그 부분을 개발하러 service패키지로 고고

인강 14:16초 controller로 넘어감 MemoService를 만들었기 때문에 controller에서 연결을 해야하기에 sevice부분을 불러오는 코드작성해야함. 
그 후 public Memo createMemo(@RequestBody MemoRequestDto requestDto) { 
	return 이 부분을 완성시켜야함	
	}

14분 58초 service로 넘어와서 > 우리가 데이터베이스 연을 해서 저장을 하려면 @Entity어노테이션이 붙어있는 Memo 클래스를 인스턴스로 만들어서
그 값을 사용을 해서 저장을 해야 됩니다. 그렇기에 메모 객체를 만들어주고 생성자를 사용을 해서 값들을 넣어준다. 
Memo memo = new Memo(requestDto); 에서 빨간줄 requestDto을 클릭 시 Memo자바클래스에 public Memo(MemoRequestDto requestDto) { 이 생성됨.
그 후 다시 service자바클래스에 오면  Memo memo = new Memo(requestDto) 빨간 줄이 사라지고 이제 MemoRepository의 save() 함수를 사용해서
save() 함수 안에 memo 인스턴스를 넣어주면 자동으로 쿼리가 생성되면서 데이터베이스에 연결되며 저장이 된다.
반환 타입을 memo로 했기에 memo그대로 반환한다. 추가로 @Transactional을 입력한다.

25:28분 수정 부분 정리 멘트